# -*- coding: utf-8 -*-
"""kNN_renombrado.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JqdanK9HZAqS78ntIcKV2OK8xHiW0h8-
"""

import numpy as np
from collections import Counter

class ClasificadorKNN:
    def __init__(self, num_vecinos=3):
        self.num_vecinos = num_vecinos
        self.datos_entrenamiento = None
        self.etiquetas_entrenamiento = None

    def entrenar(self, datos_entrenamiento, etiquetas_entrenamiento):
        self.datos_entrenamiento = datos_entrenamiento
        self.etiquetas_entrenamiento = etiquetas_entrenamiento

    def predecir(self, datos_prueba):
        predicciones = [self._predecir(individuo) para individuo en datos_prueba]
        return np.array(predicciones)

    def _predecir(self, individuo):
        distancias = [np.linalg.norm(individuo - dato) for dato in self.datos_entrenamiento]

        indices_vecinos = np.argsort(distancias)[:self.num_vecinos]
        etiquetas_vecinas = [self.etiquetas_entrenamiento[i] for i in indices_vecinos]

        etiqueta_mas_comun = Counter(etiquetas_vecinas).most_common(1)
        return etiqueta_mas_comun[0][0]


if __name__ == "__main__":
    datos_entrenamiento = np.array([[1, 2], [2, 3], [3, 1], [4, 2]])
    etiquetas_entrenamiento = np.array([0, 0, 1, 1])

    datos_prueba = np.array([[2.5, 2]])

    clasificador_knn = ClasificadorKNN(num_vecinos=3)
    clasificador_knn.entrenar(datos_entrenamiento, etiquetas_entrenamiento)

    predicciones = clasificador_knn.predecir(datos_prueba)

    print("Predicci√≥n:", predicciones)
